spring.application.name=async-multithreading

# Configuração padrão (para compatibilidade)
spring.datasource.url=jdbc:postgresql://postgresql:5432/interactions
spring.datasource.username=pgsql
spring.datasource.password=pgsql
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Config para PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true

# Para garantir que o DataLoader execute
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# REDIS (agora usando o nome do serviço Docker)
spring.redis.host=redis
spring.redis.port=6379

# VIRTUAL THREADS
spring.threads.virtual.enabled=true


# Configuração HikariCP para múltiplos datasources
spring.datasource.write.hikari.maximum-pool-size=20
spring.datasource.write.hikari.minimum-idle=10
spring.datasource.write.hikari.connection-timeout=30000
spring.datasource.write.hikari.idle-timeout=600000
spring.datasource.write.hikari.max-lifetime=1800000
spring.datasource.write.hikari.leak-detection-threshold=60000

# spring.datasource.read.hikari.maximum-pool-size=15
# spring.datasource.read.hikari.minimum-idle=5
# spring.datasource.read.hikari.connection-timeout=30000
# spring.datasource.read.hikari.idle-timeout=600000
# spring.datasource.read.hikari.max-lifetime=1800000
# spring.datasource.read.hikari.leak-detection-threshold=60000

# Configurações JPA adicionais
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
